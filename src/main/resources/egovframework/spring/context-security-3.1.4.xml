<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!--로그인 폼이 자동 생성 -->
	<!-- 
    <http auto-config="true">
        <intercept-url pattern="/sample/add*" access="ROLE_ADMIN" />
        <intercept-url pattern="/sample/update*" access="ROLE_ADMIN" />
        <intercept-url pattern="/sample/delete*" access="ROLE_ADMIN" />
        <intercept-url pattern="/**" access="ROLE_USER" />
        
        <http-basic />
    </http>
    -->

    <http pattern="/css/**" security="none"/>    
    <http pattern="/images/**" security="none"/>
    

  	<http access-denied-page="/common/accessDenied.jsp">
    	<!-- 인증 x , 사용자 정보 0-->
    	<intercept-url pattern="/common/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
    	
    	<!-- 인증  x, 사용자 정보 x
    	<intercept-url pattern="/common/**" filters="none" />
    	-->
    	
       	<intercept-url pattern="/sample/add*" access="ROLE_ADMIN" />
        <intercept-url pattern="/sample/update*" access="ROLE_ADMIN" />
        <intercept-url pattern="/sample/delete*" access="ROLE_ADMIN" />
        <intercept-url pattern="/**" access="ROLE_USER" />
        <!-- 로그인 특정 url 로 이동 default-target-url="/loginOkPage.jsp" always-use-default-target="true"-->
		<form-login login-page="/common/login.jsp"
					authentication-failure-url="/common/login.jsp?fail=true"
					/>
		<logout logout-success-url="/common/logout.jsp" />
		<anonymous/>
		
		<!-- for authorization -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
	</http>
    <!---->
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="user" password="user" authorities="ROLE_USER" />
				<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
			</user-service>
			
			<password-encoder hash="sha-256"></password-encoder>
		</authentication-provider>
		<authentication-provider user-service-ref="jdbcUserService">
			<password-encoder hash="sha-256" />
		</authentication-provider>		
	</authentication-manager>	
	
	<!-- 테이블 만들고 마지막에 이걸 등록한다.
	<jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
		users-by-username-query="SELECT USER_ID, PASSWORD, ENABLED, USER_NAME FROM USERS WHERE USER_ID = ?"
		authorities-by-username-query="SELECT USER_ID, AUTHORITY FROM AUTHORITIES WHERE USER_ID = ?" />
	-->
	
	<!-- customizing user table, authorities table -->	 
	<beans:bean id="jdbcUserService"
			class="egovframework.rte.improved.security.userdetails.jdbc.EgovJdbcUserDetailsManager" >
		<beans:property name="usersByUsernameQuery" value="SELECT USER_ID, PASSWORD, ENABLED, USER_NAME FROM USERS WHERE USER_ID = ? "/>
		<beans:property name="authoritiesByUsernameQuery" value="SELECT USER_ID, AUTHORITY FROM AUTHORITIES WHERE USER_ID = ? "/>
		<beans:property name="roleHierarchy" ref="roleHierarchy" />
		<beans:property name="dataSource" ref="dataSource" />
		<!--TODO :직접 작성 위의 값 들을  VO로 리턴함-->
		<beans:property name="mapClass" value="egovframework.rte.cmmn.security.EgovUserDetailsMapping" />
	</beans:bean>
	
	<beans:bean id="securedObjectService"
		class="egovframework.rte.improved.security.securedobject.impl.SecuredObjectServiceImpl">
		<beans:property name="securedObjectDAO" ref="securedObjectDAO"/>
	</beans:bean>

	<beans:bean id="securedObjectDAO" class="egovframework.rte.improved.security.securedobject.impl.SecuredObjectDAO" >
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<beans:bean id="roleHierarchy" 
			class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl" >
		<!-- XML 사용 -->
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_USER
				ROLE_USER > ROLE_RESTRICTED
				ROLE_RESTRICTED > IS_AUTHENTICATED_FULLY
				IS_AUTHENTICATED_REMEMBERED > IS_AUTHENTICATED_ANONYMOUSLY
			</beans:value>
		</beans:property>
		<!-- DB 사용 
		<beans:property name="hierarchy" ref="hierarchyStrings"/>
		-->
	</beans:bean>

	<beans:bean id="hierarchyStrings"
		class="egovframework.rte.improved.security.userdetails.hierarchicalroles.HierarchyStringsFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<!-- for authorization -->	
	<beans:bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<!--  -->	
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
		<!-- 억세스 허용 조건 : 권한을 만들 시 반드시 ROLE_ 를 만들어야함-->
		<beans:property name="accessDecisionManager" ref="org.springframework.security.access.vote.AffirmativeBased#0" />
		<!-- TODO : 이것 만 수정 -->
		<beans:property name="securityMetadataSource" ref="databaseSecurityMetadataSource" />
	</beans:bean>
	
	<beans:bean id="databaseSecurityMetadataSource"
		class="egovframework.rte.improved.security.intercept.EgovReloadableFilterInvocationSecurityMetadataSource">
		<beans:constructor-arg ref="requestMap" />	
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<!--  url patter : role -->
	<beans:bean id="requestMap"
		class="egovframework.rte.improved.security.intercept.UrlResourcesMapFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
	</beans:bean>
	
	<!-- method 메소드 단위 권한 체크 할 시 오류 확인 불가(콘솔 확인 뿐)
	<beans:bean id="methodSecurityMetadataSourceAdvisor" class="org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor">
		<beans:constructor-arg value="methodSecurityInterceptor" />
		<beans:constructor-arg ref="delegatingMethodSecurityMetadataSource" />
		<beans:constructor-arg value="delegatingMethodSecurityMetadataSource" />
	</beans:bean>
	
	<beans:bean id="methodSecurityInterceptor" class="org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor">
		<beans:property name="validateConfigAttributes" value="false" />
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager"/>
		<beans:property name="accessDecisionManager" ref="org.springframework.security.access.vote.AffirmativeBased#0"/>
		<beans:property name="securityMetadataSource" ref="delegatingMethodSecurityMetadataSource" />
	</beans:bean>

    <beans:bean id="delegatingMethodSecurityMetadataSource" class="org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="methodSecurityMetadataSources" />
                <beans:bean class="org.springframework.security.access.annotation.SecuredAnnotationSecurityMetadataSource" />
                <beans:bean class="org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource" />
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>
	
	<beans:bean id="methodSecurityMetadataSources"
		class="org.springframework.security.access.method.MapBasedMethodSecurityMetadataSource">
		<beans:constructor-arg ref="methodMap" />
	</beans:bean>
	
	<beans:bean id="methodMap"
		class="egovframework.rte.improved.security.intercept.MethodResourcesMapFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
		<beans:property name="resourceType" value="method"/>
	</beans:bean>
	-->
	
	<!-- pointcut -->
	<!-- if no map, there is a error that "this map must not be empty; it must contain at least one entry" -->
	<!--
	<beans:bean id="protectPointcutPostProcessor" class="org.springframework.security.config.method.ProtectPointcutPostProcessor">
		<beans:constructor-arg ref="methodSecurityMetadataSources" />
		<beans:property name="pointcutMap" ref="pointcutMap"/>
	</beans:bean>

	<beans:bean id="pointcutMap"
		class="egovframework.rte.improved.security.intercept.MethodResourcesMapFactoryBean"
		init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService"/>
		<beans:property name="resourceType" value="pointcut"/>
	</beans:bean>
	-->

</beans:beans>